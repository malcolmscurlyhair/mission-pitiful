import os
import json
import random

# Command-line tool that quizzes the user on which mission statement
# pertains to what company. Will need the ./docs/data.json file to exist
# (as generated by the grab.py script).

NO_OF_CHOICES = 9

def quiz_the_user(mission_statement, correct_name, names, business_model):
  print(f"Which company has the following mission statement:\n\n\"{mission_statement}\"\n")

  for i, company_name in enumerate(names):
    print(f"{i + 1}. {company_name}")

  guess = input(f"\nYour choice (1-{NO_OF_CHOICES}) ")

  try:
    guess_no = int(guess) - 1

    if names[guess_no] == correct_name:
      print(f"Correct! ({business_model})")
    else:
      print(f"Sorry, the correct answer is {correct_name}. ({business_model})")
  except (ValueError, IndexError):
    print(f"Invalid input. Please enter a number from 1 to {NO_OF_CHOICES}.")

if __name__ == "__main__":
  if not os.path.exists("./docs/data.json"):
    print("User the grab.py script to fetch the data first!")
    exit()

  print("# WELCOME TO MISSION PITIFUL")
  print("")
  print("I'm going to give you a bunch mission statements, then you are going to guess what company they are for.")
  print("Let's get started!")
  print("")

  with open("./docs/data.json", 'r') as file:
    text      = file.read()
    companies = json.loads(text)

  company_names = list(companies.keys())

  while True:
    name         = random.choice(company_names)
    company_data = companies[name]
    statement    = company_data["mission-statement"]
    model        = company_data["business-model"]

    possible_answers = [ name ] + random.sample(list(set(company_names) - set(name,)), k=NO_OF_CHOICES-1)

    random.shuffle(possible_answers)

    quiz_the_user(statement, name, possible_answers, model)

    another = input("\nTry another? (yes/no): \n").strip().lower()

    if "n" in another:
      break
